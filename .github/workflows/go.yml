name: Go
on: 
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches: 
      - master
jobs:
  test:
    name: Test
    strategy:
      matrix:
        golang: ["1.16"]
        os: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set up Go ${{ matrix.golang }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.golang }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Download golangci-lint
      run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.23.8

    - name: Make sure it builds
      run: go build

    - name: Lint
      run: $(go env GOPATH)/bin/golangci-lint run --timeout=10m
    
    - name: Test
      run: go test -v ./...

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    steps:    
    - name: Download gox
      run: go get github.com/mitchellh/gox

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get Git tag
      id: tag
      run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

    - name: Build release assets
      run: |
         $(go env GOPATH)/bin/gox \
          -output='build/gocat-${{ steps.tag.outputs.TAG }}-{{ .OS }}-{{ .Arch }}' \
          -arch='amd64' \
          -os='linux darwin' \
          -verbose \
          -ldflags "-s -w"
             
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false
        body: Changelog at https://github.com/sumup-oss/gocat/blob/master/CHANGELOG.md

    # TODO: Replace with glob pattern once `actions/upload-release-asset` supports it
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/gocat-${{ steps.tag.outputs.TAG }}-darwin-amd64
        asset_name: gocat-${{ steps.tag.outputs.TAG }}-darwin-amd64
        asset_content_type: application/octet-stream
      
    # TODO: Replace with glob pattern once `actions/upload-release-asset` supports it
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/gocat-${{ steps.tag.outputs.TAG }}-linux-amd64
        asset_name: gocat-${{ steps.tag.outputs.TAG }}-linux-amd64
        asset_content_type: application/octet-stream
